<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc subcompact="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes" ?>

<rfc ipr="trust200902" docName="draft-vanrein-http-unauth-user-02" category="std">

<front>

	<title abbrev="HTTP user@">User Names for HTTP Resources</title>

	<author initials="R" surname="Van Rein" fullname="Rick van Rein">
		<organization>InternetWide.org</organization>
		<address>
			<postal>
				<street>Haarlebrink 5</street>
				<city>Enschede</city>
				<region>Overijssel</region>
				<code>7544 WP</code>
				<country>The Netherlands</country>
			</postal>
			<email>rick@openfortress.nl</email>
		</address>
	</author>

	<date day="24" month="January" year="2020"/>

	<abstract>
	<t>Most protocols support users under domain names, but HTTP does
	not.  Usage patterns in the wild do suggest a desire to have this
	facility.  This specification defines a header for user names,
	orthogonal to any authentication or authorisation concerns.</t>
	</abstract>

</front>

<!--

CHANGES FROM 01 TO 02:
 * Header renamed from "User-View" to "User", envvar is now HTTP_USER
 * No longer supported the header in responses (instead use redirection)
 * Redirection / Links retain user@ when relative w/o authority component

CHANGES FROM 00 TO 01:
 * Textual improvements of rough summing-up of requirements
 * Unknown headers are ignored as a matter of course
 * User part rendering in RFC 3986 is cautious about abuse patterns
 * Added environment variable HTTP_USERVIEW



-->


<middle>

<section title="Introduction" anchor="intro">

<t>Most protocols support Network Access Identifiers
<xref target="RFC7542"/> like john@example.com to
identify users like john under domains such as example.com.  The URI format
for HTTP can express [Section 2.7.1 of <xref target="RFC7230"/>]
such authority sections, and many online applications
seem to want to address individual users, but HTTP URIs do not usually
express user names.  This specification therefore introduces
a header "User", in close parallel to the "Host" header.</t>

<t>Historically, user names have been coupled to (Basic and Digest)
authentication.  This is not generally correct; the user name in the URI
indicates a resource name space, not an (authenticating) visitor.  By using
a new header field, this specification allows authentication to be orthogonal
to resource name space selection.</t>

<t>Some user agents have supported (Basic and Digest) authentication with a
"user:password" format in the authority section of URIs.  This has now been
deprecated [Section 3.2.1 of <xref target="RFC3986"/>] but the form with
just "user" and no ":password" continues to be acceptable.  Various HTTP clients
have different handling for this form, sometimes flagging it incorrectly as
a security hazard, which also motivates a specification for proper handling.</t>

<t>TODO: Issue filed with HTTPbis,
https://github.com/httpwg/http-core/issues/278
and offered a Pull Request,
https://github.com/httpwg/http-core/compare/master...arpa2:userinfo-password
as a followup of somewhat late Errata against RFC7230,
https://www.rfc-editor.org/errata/eid5964</t>

<t>The purpose of this specification is to define clear meaning for HTTP URIs
with a user name.</t>

</section>


<section title="The HTTP User Header" anchor="header">

<t>The "User" header field provides an aspect of the desired
resource name scope.  The value is usually taken
from the authority section [Section 3.2 of <xref target="RFC3986"/>]
of the target URI and MUST NOT include a ":" colon (U+003a) character.</t>

<t>The User header value holds
precisely one value with the following ABNF grammar:
<figure><artwork><![CDATA[
User = 1*( unreserved / pct-encoded / sub-delims )
]]></artwork></figure>
The referenced non-terminals are as for URIs <xref target="RFC3986"/>.
Zeal in the use of the "pct-encoded" non-terminal for plain characters that
have a direct representation MAY be treated as an attempted attack.</t>

<t>The User header MAY appear in requests and MUST NOT occur in responses.
<!-- also not in trailers [Section 4.1 of <xref target="RFC7230"/>].  -->
When unrecognised by HTTP servers, the User header is ignored
[Section 3.2.1 of <xref target="RFC7230"/>].
Intermediates such as proxies and caches MUST NOT add, remove or modify the
User header.</t>

</section>


<section title="Protocol Handling of HTTP User" anchor="protocol">

<t>User agents SHOULD render user names in authority sections whenever
they render host names, though it may be helpful if it stands out graphically
[Section 7.6 of <xref target="RFC3986"/>].
User agents SHOULD NOT remove user names from the target URI.
User agents MAY remove the "@" (U+0040) symbol from a URI when the
preceding user name is empty.  User agents MUST refuse URIs with
a ":" colon (U+003a) in the user name but MUST NOT complain about a
user name that does not have that character.</t>

<t>During redirects or other traversals to (relative) HTTP URIs, the
user name MUST be overwritten when the new URI specifies an authority
component, and it MUST be kept otherwise.</t>

</section>

<section title="Caching Behaviour" anchor="cache">

<t>The privacy or security of an HTTP resource is not impacted by the
use of a User header.  This is because User is about
resource location, but not about client identity.</t>

<t>HTTP caches <xref target="RFC7234"/>
need to distinguish requests with different User header values.
The Vary header [Section 7.1.4 of <xref target="RFC7231"/>] MUST
be present in the matching response, and the header
MUST either be a single "*" star (U+002a) or list the "user" name,
for all responses whose processing was influenced by the
User header.  This requirement does not apply to software and
configurations that ignore the User header.</t>

</section>


<section title="IANA Considerations" anchor="iana">

<t>IANA adds the following entry to the Message Headers registry:
<figure><artwork><![CDATA[
Header Field Name   Template   Protocol   Status    Reference
------------------  ---------  ---------  -------   ----------
User                           http       TBD       TBD:THIS_SPEC
]]></artwork></figure>
</t>

</section>

<section title="Security Considerations">

<t>The User header field as defined herein is orthogonal to issues of
authentication or authorisation, and adds no security concerns.</t>

<!-- blablabla
<t>These user names refine the model of resource addressing for HTTP,
but any concerns related to privacy or secrecy of resources are already
habitually addressed in HTTP servers.  This habit MUST be applied to
this new, more refined resource addressing model.</t>
-->

</section>

</middle>


<back>

<references title="Normative References">
<!-- <?rfc include="reference.RFC.2617.xml"?> -->
<?rfc include="reference.RFC.3986.xml"?>
<?rfc include="reference.RFC.7230.xml"?>
<?rfc include="reference.RFC.7231.xml"?>
<?rfc include="reference.RFC.7234.xml"?>
<?rfc include="reference.RFC.7542.xml"?>
</references>

<!--
<references title="Informative References">
<?rfc include="reference.RFC.3579.xml"?>
<?rfc include="reference.RFC.4121.xml"?>
<?rfc include="reference.RFC.5246.xml"?>
<?rfc include="reference.RFC.7055.xml"?>
</references>
-->


<section title="HTTP User Environment Variable" anchor="envvars">

<t>The following variable SHOULD be passed up to applications on
a HTTP server:
<list style="hanging" hangIndent="6">
<t hangText="HTTP_USER">gives the HTTP User header value
	after parsing and percent-decoding.  Like the customary
	variables HTTP_HOST and PATH_INFO, this specifies the
	resource being requested.  The HTTP_USER header does not
	describe the identity of the HTTP client.</t>
</list></t>

</section>

</back>

</rfc>
